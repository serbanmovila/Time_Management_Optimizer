12 8 10

1 3 1 <= 3 -0
1 2 -2 <= 1 -0 // p72


 
-2 3 0 -1

1 0 1 1 = 4 -1
0 1 -1 2 = 6 -1 // p82

0 0 2 1 3

1 0 1 -1 2 = -1
0 1 -2 1 -2 = -2

2 -1 0 1

1 2 3 0 = 4
0 -1 1 1 = 2


2 3 5
1 1 1 <= 7 +2
1 2 2 = 13 +1
3 -1 1 >= 5 +2

            double minzjcj = Int32.MaxValue;
            int poszjcj = 0;
            for (int i = 0; i < zjcj.Length; i++)
                if (zjcj[i] / matrix[pos, i + 1] < minzjcj && matrix[pos, i + 1] < 0)
                {
                    minzjcj = zjcj[i] / matrix[pos, i + 1];
                    poszjcj = i;
                }
            for (int i = 0; i < Restrictions.free.Length; i++)
            {
                if (matrix[i, poszjcj + 1] < 0)
                    return false;
            }

70 30
0.4 0 <= 600 -1
1 0 >= 60 -1
-0.4 1 >= 480 -1
1 1 = 1440 -0


10 2 10 10 10 3 15 40
0.1 1 0.1 0.3 0.1 1.5 0 0 <= 600 -1
1 0.2 0 0.6 0.7 0.2 0.3 0 <= 1200 -0
0 -0.4 -1 -0.8 -0.7 -0.8 -1 0 <= -1200 -0
0.6 1.2 0.3 0.3 0.1 2 0 -1 <= -3360 -0
1 1 1 1 1 1 1 1 = 10080 -0
 
20 3 17 10 10 40

0.1 1 0.1 0.3 0.1 0 <= 180 1
1 0.2 0 0.6 0.7 0 <= 420 1
0 0.4 1 0.8 0.7 0 >= 240 1
-0.6 -1.2 -0.3 -0.3 -0.1 1 >= 480 1
0 0 0 0 0 1 <= 1200 1
1 1 1 1 1 1 = 1440 0


20 3 17 15 10 35

1 0 0 0 0 0 >= 240 0
0 0 1 0 0 0 >= 30 0
0 0 0 0 1 0 >= 15 0
0 0 0 0 0 1 >= 240 0
1 0 0 0 0 0 <= 420 0
0 1 0 0 0 0 <= 120 0
0 0 1 0 0 0 <= 180 0
0 0 0 1 0 0 <= 120 0
0 0 0 0 1 0 <= 60 0
0 0 0 0 0 1 <= 600 0
0.1 1 0.1 0.3 0.1 0 >= 50 1
0 0.4 1 0.8 0.7 0 >= 100 -1
1 1 1 1 1 1 = 900 0

